
openapi: 3.0.3
info:
  title: ContratPro API
  description: |
    API REST completa para o ContratPro - Plataforma de contratos digitais com assinatura jur√≠dica
    
    ## Recursos Principais
    - üìù **Gest√£o Completa de Contratos** - CRUD, templates, envio e assinatura
    - üîê **Assinatura Digital Jur√≠dica** - Valida√ß√£o legal com certificados digitais
    - üìÑ **Gera√ß√£o de PDFs** - Documentos profissionais com marca d'√°gua de seguran√ßa
    - üîó **Webhooks** - Integra√ß√£o em tempo real com sistemas externos
    - üìä **Analytics** - Relat√≥rios detalhados e m√©tricas de performance
    - üí∞ **Integra√ß√£o FinanceFlow** - Valida√ß√£o de planos e sincroniza√ß√£o
    
    ## Autentica√ß√£o
    Utiliza JWT padr√£o Supabase no header: `Authorization: Bearer {token}`
    
    ## Integra√ß√£o com FinanceFlow
    - Valida√ß√£o autom√°tica de plano premium
    - Comunica√ß√£o via API segura com webhook
    - Sincroniza√ß√£o bidirecional de dados
    
    ## Assinatura Digital
    - Hash SHA-256 com valida√ß√£o temporal
    - Certificados digitais com validade jur√≠dica
    - Geolocaliza√ß√£o e auditoria completa
    - Conformidade com MP 2.200-2/2001
    
  version: 2.0.0
  contact:
    name: ContratPro API Support
    email: api@contratpro.com
    url: https://docs.contratpro.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.contratpro.com/v2
    description: Produ√ß√£o
  - url: https://staging-api.contratpro.com/v2
    description: Staging
  - url: http://localhost:3001/v2
    description: Desenvolvimento Local

security:
  - bearerAuth: []

tags:
  - name: System
    description: Status e sa√∫de do sistema
  - name: Contracts
    description: Gest√£o de contratos digitais
  - name: Clients
    description: Gerenciamento de clientes
  - name: Templates
    description: Modelos de contrato
  - name: PDF
    description: Gera√ß√£o e download de PDFs
  - name: Digital Signature
    description: Assinatura digital e certificados
  - name: Notifications
    description: Sistema de notifica√ß√µes
  - name: Analytics
    description: Relat√≥rios e m√©tricas
  - name: Integrations
    description: Integra√ß√µes externas
  - name: Webhooks
    description: Gerenciamento de webhooks

paths:
  /health:
    get:
      summary: Health check do sistema
      tags: [System]
      security: []
      responses:
        '200':
          description: Sistema funcionando normalmente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                    example: "2.0.0"
                  database:
                    type: string
                    example: "connected"

  /contracts:
    get:
      summary: Listar contratos do usu√°rio
      tags: [Contracts]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: status
          in: query
          schema:
            type: string
            enum: [draft, sent, signed, expired, cancelled]
        - name: client_id
          in: query
          schema:
            type: string
            format: uuid
        - name: search
          in: query
          schema:
            type: string
            description: Busca por t√≠tulo ou descri√ß√£o
      responses:
        '200':
          description: Lista paginada de contratos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContracts'

    post:
      summary: Criar novo contrato
      tags: [Contracts]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContractRequest'
      responses:
        '201':
          description: Contrato criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponse'
        '402':
          description: Plano premium necess√°rio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /contracts/{id}:
    get:
      summary: Obter contrato espec√≠fico
      tags: [Contracts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Dados detalhados do contrato
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponse'
        '404':
          description: Contrato n√£o encontrado

    put:
      summary: Atualizar contrato (apenas rascunhos)
      tags: [Contracts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContractRequest'
      responses:
        '200':
          description: Contrato atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponse'

    delete:
      summary: Excluir contrato (apenas rascunhos)
      tags: [Contracts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Contrato exclu√≠do com sucesso
        '409':
          description: N√£o √© poss√≠vel excluir contrato enviado/assinado

  /contracts/{id}/send:
    post:
      summary: Enviar contrato para assinatura
      tags: [Contracts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendContractRequest'
      responses:
        '200':
          description: Contrato enviado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponse'

  /contracts/{id}/sign:
    post:
      summary: Assinar contrato digitalmente
      tags: [Contracts]
      security: []  # Assinatura n√£o requer auth do usu√°rio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignContractRequest'
      responses:
        '200':
          description: Contrato assinado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResponse'
        '400':
          description: Token inv√°lido ou contrato expirado

  /contracts/{id}/generate-pdf:
    post:
      summary: Gerar PDF do contrato
      tags: [PDF]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: PDF gerado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      pdf_url:
                        type: string
                        format: uri
                  success:
                    type: boolean

  /contracts/{id}/download-pdf:
    get:
      summary: Download do PDF do contrato
      tags: [PDF]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Arquivo PDF
          content:
            application/pdf:
              schema:
                type: string
                format: binary

  /contracts/{id}/validate-signature:
    get:
      summary: Validar assinatura digital
      tags: [Digital Signature]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resultado da valida√ß√£o
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      valid:
                        type: boolean
                      details:
                        type: object
                        properties:
                          signature_hash:
                            type: string
                          timestamp:
                            type: string
                            format: date-time
                          signer_info:
                            type: object
                  success:
                    type: boolean

  /contracts/{id}/certificate:
    get:
      summary: Obter certificado digital
      tags: [Digital Signature]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Certificado digital
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      certificate:
                        type: string
                        description: Certificado em Base64
                      verificationCode:
                        type: string
                        description: C√≥digo de verifica√ß√£o
                  success:
                    type: boolean

  /contracts/{id}/events:
    get:
      summary: Hist√≥rico de eventos do contrato
      tags: [Contracts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Lista de eventos
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractEvent'
                  success:
                    type: boolean

  /clients:
    get:
      summary: Listar clientes
      tags: [Clients]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Lista paginada de clientes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClients'

    post:
      summary: Criar novo cliente
      tags: [Clients]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientRequest'
      responses:
        '201':
          description: Cliente criado com sucesso

  /clients/{id}:
    get:
      summary: Obter cliente espec√≠fico
      tags: [Clients]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Dados do cliente

    put:
      summary: Atualizar cliente
      tags: [Clients]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Cliente atualizado

    delete:
      summary: Excluir cliente
      tags: [Clients]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Cliente exclu√≠do

  /templates:
    get:
      summary: Listar modelos de contrato
      tags: [Templates]
      parameters:
        - name: category
          in: query
          schema:
            type: string
            enum: [service, licensing, rights, custom]
        - name: active_only
          in: query
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Lista de modelos dispon√≠veis
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContractTemplate'
                  success:
                    type: boolean

    post:
      summary: Criar novo modelo
      tags: [Templates]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTemplateRequest'
      responses:
        '201':
          description: Modelo criado

  /templates/{id}:
    get:
      summary: Obter modelo espec√≠fico
      tags: [Templates]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Dados completos do modelo

    put:
      summary: Atualizar modelo
      tags: [Templates]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Modelo atualizado

    delete:
      summary: Excluir modelo
      tags: [Templates]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Modelo exclu√≠do

  /notifications:
    get:
      summary: Listar notifica√ß√µes do usu√°rio
      tags: [Notifications]
      parameters:
        - name: unread_only
          in: query
          schema:
            type: boolean
            default: false
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: Lista paginada de notifica√ß√µes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotifications'

  /notifications/{id}/read:
    put:
      summary: Marcar notifica√ß√£o como lida
      tags: [Notifications]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Notifica√ß√£o marcada como lida

  /notifications/mark-all-read:
    put:
      summary: Marcar todas as notifica√ß√µes como lidas
      tags: [Notifications]
      responses:
        '200':
          description: Todas as notifica√ß√µes marcadas como lidas

  /analytics/contracts:
    get:
      summary: Analytics de contratos
      tags: [Analytics]
      parameters:
        - name: period
          in: query
          schema:
            type: string
            enum: [week, month, year]
            default: month
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Dados anal√≠ticos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractAnalytics'

  /integrations/financeflow/validate-plan:
    post:
      summary: Validar plano premium no FinanceFlow
      tags: [Integrations]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                finance_flow_user_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Status do plano verificado
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      has_premium:
                        type: boolean
                      plan_details:
                        type: object
                        properties:
                          plan_name:
                            type: string
                          expires_at:
                            type: string
                            format: date-time
                          features:
                            type: array
                            items:
                              type: string
                  success:
                    type: boolean

  /integrations/financeflow/sync-contract:
    post:
      summary: Sincronizar contrato com FinanceFlow
      tags: [Integrations]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contract_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Contrato sincronizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      synced:
                        type: boolean
                      finance_flow_id:
                        type: string
                  success:
                    type: boolean

  /webhooks:
    get:
      summary: Listar webhooks configurados
      tags: [Webhooks]
      responses:
        '200':
          description: Lista de webhooks

    post:
      summary: Registrar novo webhook
      tags: [Webhooks]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                events:
                  type: array
                  items:
                    type: string
                    enum: [
                      contract.created,
                      contract.sent,
                      contract.signed,
                      contract.expired,
                      contract.cancelled,
                      client.created,
                      client.updated
                    ]
                secret:
                  type: string
                  description: Chave secreta para valida√ß√£o
      responses:
        '201':
          description: Webhook registrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      webhook_id:
                        type: string
                        format: uuid
                  success:
                    type: boolean

  /webhooks/{id}/test:
    post:
      summary: Testar webhook
      tags: [Webhooks]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Teste de webhook executado
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                      response_time:
                        type: number
                      status_code:
                        type: integer
                  success:
                    type: boolean

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # ... keep existing code (todas as defini√ß√µes de schemas existentes)

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string

    ContractAnalytics:
      type: object
      properties:
        data:
          type: object
          properties:
            total_contracts:
              type: integer
            signed_contracts:
              type: integer
            pending_contracts:
              type: integer
            total_value:
              type: number
            conversion_rate:
              type: number
            monthly_data:
              type: array
              items:
                type: object
                properties:
                  month:
                    type: string
                  contracts:
                    type: integer
                  value:
                    type: number
        success:
          type: boolean

    CreateTemplateRequest:
      type: object
      required:
        - name
        - template_content
        - category
      properties:
        name:
          type: string
        description:
          type: string
        template_content:
          type: string
        variables:
          type: array
          items:
            $ref: '#/components/schemas/TemplateVariable'
        category:
          type: string
          enum: [service, licensing, rights, custom]

    PaginatedNotifications:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        pagination:
          $ref: '#/components/schemas/Pagination'
        success:
          type: boolean

    # Schemas existentes mantidos inalterados
    Contract:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        client_id:
          type: string
          format: uuid
        template_id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        content:
          type: string
        value:
          type: number
        status:
          type: string
          enum: [draft, sent, signed, expired, cancelled]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        sent_at:
          type: string
          format: date-time
        signed_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        pdf_url:
          type: string
        signature_data:
          $ref: '#/components/schemas/SignatureData'

    SignatureData:
      type: object
      properties:
        signer_name:
          type: string
        signer_email:
          type: string
        signed_at:
          type: string
          format: date-time
        ip_address:
          type: string
        user_agent:
          type: string
        geolocation:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
        signature_hash:
          type: string

    Client:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        cpf_cnpj:
          type: string
        address:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ContractTemplate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        template_content:
          type: string
        variables:
          type: array
          items:
            $ref: '#/components/schemas/TemplateVariable'
        category:
          type: string
          enum: [service, licensing, rights, custom]
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time

    TemplateVariable:
      type: object
      properties:
        key:
          type: string
        label:
          type: string
        type:
          type: string
          enum: [text, number, date, select]
        required:
          type: boolean
        options:
          type: array
          items:
            type: string

    ContractEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
        contract_id:
          type: string
          format: uuid
        event_type:
          type: string
          enum: [created, sent, viewed, signed, expired, cancelled]
        description:
          type: string
        metadata:
          type: object
        created_at:
          type: string
          format: date-time
        ip_address:
          type: string
        user_agent:
          type: string

    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        title:
          type: string
        message:
          type: string
        type:
          type: string
          enum: [info, success, warning, error]
        read:
          type: boolean
        metadata:
          type: object
        created_at:
          type: string
          format: date-time

    CreateContractRequest:
      type: object
      required:
        - client_id
        - title
        - content
      properties:
        client_id:
          type: string
          format: uuid
        template_id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        content:
          type: string
        value:
          type: number
        variables:
          type: object

    SendContractRequest:
      type: object
      properties:
        expires_in_days:
          type: integer
          default: 30
        custom_message:
          type: string

    SignContractRequest:
      type: object
      required:
        - signature_token
        - signer_data
      properties:
        signature_token:
          type: string
        signer_data:
          type: object
          required:
            - name
            - email
            - ip_address
            - user_agent
          properties:
            name:
              type: string
            email:
              type: string
              format: email
            ip_address:
              type: string
            user_agent:
              type: string
            geolocation:
              type: object
              properties:
                latitude:
                  type: number
                longitude:
                  type: number

    CreateClientRequest:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        cpf_cnpj:
          type: string
        address:
          type: string

    ContractResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Contract'
        success:
          type: boolean
        message:
          type: string

    PaginatedContracts:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Contract'
        pagination:
          $ref: '#/components/schemas/Pagination'
        success:
          type: boolean

    PaginatedClients:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Client'
        pagination:
          $ref: '#/components/schemas/Pagination'
        success:
          type: boolean

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        total_pages:
          type: integer

    UpdateContractRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        content:
          type: string
        value:
          type: number

  examples:
    ContractExample:
      value:
        id: "123e4567-e89b-12d3-a456-426614174000"
        user_id: "123e4567-e89b-12d3-a456-426614174001"
        client_id: "123e4567-e89b-12d3-a456-426614174002"
        title: "Contrato de Presta√ß√£o de Servi√ßos - Fotografia"
        description: "Cobertura fotogr√°fica para evento corporativo"
        content: "CONTRATO DE PRESTA√á√ÉO DE SERVI√áOS..."
        value: 2500.00
        status: "signed"
        created_at: "2024-01-15T10:00:00Z"
        updated_at: "2024-01-16T14:30:00Z"
        sent_at: "2024-01-15T15:00:00Z"
        signed_at: "2024-01-16T14:30:00Z"
        pdf_url: "https://storage.contratpro.com/contracts/123e4567/contract.pdf"
        signature_data:
          signer_name: "Jo√£o Silva"
          signer_email: "joao@empresa.com"
          signed_at: "2024-01-16T14:30:00Z"
          ip_address: "192.168.1.100"
          signature_hash: "a1b2c3d4e5f6..."
